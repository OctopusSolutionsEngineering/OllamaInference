name: Build and Push Docker image

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Download and extract Ollama source
        run: |
          LATEST=$(gh api repos/ollama/ollama/releases/latest --jq '.tag_name')
          wget https://github.com/ollama/ollama/archive/refs/tags/$LATEST.tar.gz
          tar -xzf $LATEST.tar.gz
          ls -la ollama-${LATEST#v}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install CycloneDX Go module
        run: go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest

      - name: Generate SBOM from go.sum
        run: |
          # Extract the downloaded Ollama source
          LATEST=$(gh api repos/ollama/ollama/releases/latest --jq '.tag_name')
          EXTRACTED_DIR="ollama-${LATEST#v}"
          
          # Generate SBOM from the extracted Go project
          cyclonedx-gomod mod -json -output bom.json "$EXTRACTED_DIR"
          
          cat bom.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ env.REPO }}:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ env.REPO }}:latest